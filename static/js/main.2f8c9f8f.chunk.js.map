{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","evt","preventDefault","props","onSubmit","reset","this","className","s","form","htmlFor","label","type","id","input","pattern","title","required","onChange","button","Component","ContactList","contact","onDelite","list","map","item","text","onClick","Filter","filterInputId","Section","children","container","App","contacts","filter","addContact","data","prevState","changeFilter","filterName","normalizerForm","toLowerCase","el","includes","deliteContacts","idCont","cont","listFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f8c9f8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3CaLJ\",\"input\":\"Filter_input__3gB3r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__383C8\",\"title\":\"Section_title__Fn9-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2fEIX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Qvx_\",\"label\":\"ContactForm_label__2_9JH\",\"input\":\"ContactForm_input__3RO7S\",\"button\":\"ContactForm_button__2i-f_\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label htmlFor={this.nameInputId} className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={this.nameInputId}\n            className={s.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor={this.numberInputId} className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            id={this.numberInputId}\n            className={s.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" className={s.button}>\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contact, onDelite }) => {\n  return (\n    <ul className={s.list}>\n      {contact.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}>{name}</p>\n          <p className={s.number}>{number}</p>\n          <button\n            type=\"button\"\n            className={s.button}\n            onClick={() => onDelite(id)}\n          >\n            Удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDelite: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  const filterInputId = shortid.generate();\n  return (\n    <label htmlFor={filterInputId} className={s.label}>\n      Filter contacts by name\n      <input\n        type=\"text\"\n        id={filterInputId}\n        className={s.input}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Section from \"./components/Section\";\n\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (data) => {\n    const { name, number } = data;\n    // const { contacts} = this.state;\n\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    //незнаю как правильно продумать логику\n\n    // contacts.filter(cont => cont.name !== data.name\n    //   ? this.setState(prevState => ({\n    //     contacts: [contact, ...prevState.contacts],\n    //   }))\n    //   : alert(`${name} is already in contacts`)\n    // )\n\n    this.setState((prevState) => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterName = () => {\n    const { contacts, filter } = this.state;\n    const normalizerForm = filter.toLowerCase();\n    return contacts.filter((el) =>\n      el.name.toLowerCase().includes(normalizerForm)\n    );\n  };\n\n  deliteContacts = (idCont) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((cont) => cont.id !== idCont),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const listFilter = this.filterName();\n\n    return (\n      <div className={s.App}>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact}></ContactForm>\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter}></Filter>\n          <ContactList\n            contact={listFilter}\n            onDelite={this.deliteContacts}\n          ></ContactList>\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3X3k6\",\"item\":\"ContactList_item__2YmPE\",\"text\":\"ContactList_text__1h738\",\"button\":\"ContactList_button__1MJuK\"};"],"sourceRoot":""}